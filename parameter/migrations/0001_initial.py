# Generated by Django 5.1.2 on 2024-10-26 08:36

import autoslug.fields
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Clinic',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('id', model_utils.fields.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(default=True, verbose_name='Est actif')),
                ('code', models.CharField(help_text="Code unique permettant d'identifier cette élément", max_length=50, unique=True)),
                ('label', models.CharField(max_length=100, verbose_name='Libellé')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('slug', autoslug.fields.AutoSlugField(always_update=True, blank=True, editable=False, max_length=250, populate_from='label', unique=True)),
                ('address', models.CharField(max_length=50, verbose_name='Adresse')),
            ],
            options={
                'verbose_name': 'clinique',
                'verbose_name_plural': 'cliniques',
                'ordering': ['label'],
                'permissions': [('list_clinic', 'Can list clinic'), ('export_clinic', 'Can export clinic'), ('import_clinic', 'Can import clinic'), ('print_clinic', 'Can print clinic')],
            },
        ),
        migrations.CreateModel(
            name='Departement',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('id', model_utils.fields.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(default=True, verbose_name='Est actif')),
                ('code', models.CharField(help_text="Code unique permettant d'identifier cette élément", max_length=50, unique=True)),
                ('label', models.CharField(max_length=100, verbose_name='Libellé')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('slug', autoslug.fields.AutoSlugField(always_update=True, blank=True, editable=False, max_length=250, populate_from='label', unique=True)),
            ],
            options={
                'verbose_name': 'Departement',
                'verbose_name_plural': 'Departements',
                'ordering': ['label'],
                'permissions': [('list_departement', 'Can list departement'), ('export_departement', 'Can export departement'), ('import_departement', 'Can import departement'), ('print_departement', 'Can print departement')],
            },
        ),
        migrations.CreateModel(
            name='UFR',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('id', model_utils.fields.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(default=True, verbose_name='Est actif')),
                ('code', models.CharField(help_text="Code unique permettant d'identifier cette élément", max_length=50, unique=True)),
                ('label', models.CharField(max_length=100, verbose_name='Libellé')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('slug', autoslug.fields.AutoSlugField(always_update=True, blank=True, editable=False, max_length=250, populate_from='label', unique=True)),
            ],
            options={
                'verbose_name': 'UFR',
                'verbose_name_plural': 'UFRs',
                'ordering': ['label'],
                'permissions': [('list_ufr', 'Can list ufr'), ('export_ufr', 'Can export ufr'), ('import_ufr', 'Can import ufr'), ('print_ufr', 'Can print ufr')],
            },
        ),
        migrations.CreateModel(
            name='Enseignant',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('id', model_utils.fields.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(default=True, verbose_name='Est actif')),
                ('nom', models.CharField(max_length=100, verbose_name="Nom de l'Enseignant")),
                ('prenom', models.CharField(max_length=100, verbose_name="Prénom de l'Enseignant")),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name="Email de l'Enseignant")),
                ('departement', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='enseignants', to='parameter.departement', verbose_name='Département associé')),
            ],
            options={
                'verbose_name': 'Enseignant',
                'verbose_name_plural': 'Enseignants',
                'ordering': ['nom'],
                'permissions': [('list_enseignant', 'Can list enseignant'), ('export_enseignant', 'Can export enseignant'), ('import_enseignant', 'Can import enseignant'), ('print_enseignant', 'Can print enseignant')],
            },
        ),
        migrations.CreateModel(
            name='Filiere',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('id', model_utils.fields.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(default=True, verbose_name='Est actif')),
                ('code', models.CharField(help_text="Code unique permettant d'identifier cette élément", max_length=50, unique=True)),
                ('label', models.CharField(max_length=100, verbose_name='Libellé')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('slug', autoslug.fields.AutoSlugField(always_update=True, blank=True, editable=False, max_length=250, populate_from='label', unique=True)),
                ('departement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='filieres', to='parameter.departement', verbose_name='Département associé')),
            ],
            options={
                'verbose_name': 'Filiere',
                'verbose_name_plural': 'Filieres',
                'ordering': ['label'],
                'permissions': [('list_filiere', 'Can list filiere'), ('export_filiere', 'Can export filiere'), ('import_filiere', 'Can import filiere'), ('print_filiere', 'Can print filiere')],
            },
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('id', model_utils.fields.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(default=True, verbose_name='Est actif')),
                ('code', models.CharField(help_text="Code unique permettant d'identifier cette élément", max_length=50, unique=True)),
                ('label', models.CharField(max_length=100, verbose_name='Libellé')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('slug', autoslug.fields.AutoSlugField(always_update=True, blank=True, editable=False, max_length=250, populate_from='label', unique=True)),
                ('credit', models.PositiveIntegerField(verbose_name='Crédits du Module')),
                ('filiere', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='modules', to='parameter.filiere', verbose_name='Filière associée')),
            ],
            options={
                'verbose_name': 'Module',
                'verbose_name_plural': 'Modules',
                'ordering': ['label'],
                'permissions': [('list_module', 'Can list module'), ('export_module', 'Can export module'), ('import_module', 'Can import module'), ('print_module', 'Can print module')],
            },
        ),
        migrations.AddField(
            model_name='departement',
            name='ufr',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='departements', to='parameter.ufr', verbose_name='UFR associée'),
        ),
    ]
